WITH hourly_data AS (
    SELECT * FROM {{ ref('AGGR_PERFORMANCE_MEASURE_HOURLY') }}
),
daily as (
    SELECT
        DATE_TRUNC('day', START_HOURLY_SLOT_DT_TM) AS START_DAILY_SLOT_DT_TM,
        SUM(FAILURE_COUNT) AS DAILY_FAILURE_COUNT,
        SUM(SUCCESS_COUNT) AS DAILY_SUCCESS_COUNT,
        SUM(EXCEPTION_COUNT) AS DAILY_EXCEPTION_COUNT,
        SUM(EXCLUSION_COUNT) AS DAILY_EXCLUSION_COUNT
    FROM hourly_data
    GROUP BY 1
),
monthly as (
    SELECT
    DATE_TRUNC('month', START_DAILY_SLOT_DT_TM) AS AGG_PERIOD_START_DT,
    DATE_TRUNC('month',START_DAILY_SLOT_DT_TM) + interval '1 month' - interval '1 day' AS AGG_PERIOD_END_DT,
    SUM(DAILY_FAILURE_COUNT) AS MONTHLY_FAILURE_COUNT,
    SUM(DAILY_SUCCESS_COUNT) AS MONTHLY_SUCCESS_COUNT,
    SUM(DAILY_EXCEPTION_COUNT) AS MONTHLY_EXCEPTION_COUNT,
    SUM(DAILY_EXCLUSION_COUNT) AS MONTHLY_EXCLUSION_COUNT
    FROM daily
    GROUP BY DATE_TRUNC('month', START_DAILY_SLOT_DT_TM)
),
final as (
    select 
    {{ dbt_utils.generate_surrogate_key(['AGG_PERIOD_START_DT'])}} as AGGR_PERFORMANCE_MEASURE_KEY,* from monthly
)
select * from final
